trigger: 
  branches:
    include: 
      - develop

pool:
  name: GeoRisk_AWS_LZ

variables:
  - group: GeoRiskMaps_Dev_build

steps:
- bash: exit 1
  displayName: Fail build if branch is not new-agent-check develop
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/new-agent-check-develop')

- task: DotNetCoreCLI@1
  displayName: 'dotnet clean'
  inputs:
    command: clean
    projects: '**/*.csproj'

- task: SonarQubePrepare@4
  displayName: 'Prepare analysis on SonarQube'
  inputs:
    SonarQube: 'SonarQube_Service'
    projectKey: GeoRiskMaps.API
    projectName: GeoRiskMaps.API
    projectVersion: '$(Build.BuildNumber)'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.exclusions=**/*.xml, Rsa.GeoRisk.Maps.Api/Rsa.GeoRisk.Maps.Api.Application.Tests/**, Rsa.GeoRisk.Maps.Api/Rsa.GeoRisk.Maps.Api.Presentation.Tests/**, Rsa.GeoRisk.Maps.Api/Rsa.GeoRisk.Maps.Api.Infrastructure.Tests/**
      sonar.branch.name=$(Build.SourceBranchName)

- task: DotNetCoreCLI@1
  displayName: 'dotnet build'
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /m:1'

- task: DotNetCoreCLI@1
  displayName: 'Unit Test'
  inputs:
    command: test
    projects: 'Rsa.GeoRisk.Maps.Api/*.Tests/*.Tests.csproj'
    arguments: '--configuration $(BuildConfiguration) --logger trx --collect "Code Coverage" --results-directory TestResults'

- task: PublishTestResults@1
  displayName: 'Publish Test Results'
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: SonarQubeAnalyze@4
  displayName: 'Run Code Analysis'

- task: DotNetCoreCLI@1
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Rsa.GeoRisk.Maps.Api.Presentation.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:EnvironmentName=Staging'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: GeoRisk.Maps.Api'
  inputs:
    ArtifactName: GeoRisk.Maps

- task: SonarQubePublish@4
  displayName: 'Publish Quality Gate Result'
  continueOnError: true
